# 题目：
# 在你面前有n棵树，而你有两种工具，句子和斧头，他们砍第i棵树的时间分别是ai，bi，一开始你拿的是斧头，
# 而砍第i棵树前交换工具需要花费ci时间，以此砍完这些树的时间最短为多少？

# 这种做法只能拿到29%，为什么？
def solution(a, b, c, n):
    dp = [[0] * 2 for _ in range(n + 1)]  # 表示到第i棵树花费的时间

    # dp[i][0]:用斧子的时间
    # dp[i][1]:用锯子的时间
    dp[0][1] = c[0]
    for i in range(1, n + 1):
        dp[i][0] = min(dp[i - 1][0] + a[i - 1], dp[i - 1][1] + c[i - 1] + a[i - 1])
        dp[i][1] = min(dp[i - 1][1] + b[i - 1], dp[i - 1][0] + c[i - 1] + b[i - 1])

    return min(dp[n][0], dp[n][1])


if __name__ == '__main__':
    n = 3
    a = [20, 10, 90]
    b = [40, 4, 100]
    c = [20, 25, 5]

    # a = [5, 200, 100]
    # b = [10, 190, 200]
    # c = [5, 100, 100]

    ans = solution(a, b, c, n)
    print(ans)
